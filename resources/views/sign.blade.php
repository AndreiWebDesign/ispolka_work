<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>–ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ –ê–∫—Ç–∞</title>
    <script src="{{ asset('js/ncalayer-client.js') }}"></script>
</head>
<body>
<h2>–ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞</h2>
<button onclick="signAct(1)">üîê –ü–æ–¥–ø–∏—Å–∞—Ç—å –ê–∫—Ç ‚Ññ1</button>
<pre id="output"></pre>

<script>
    async function signAct(id) {
        const output = document.getElementById('output');
        output.textContent = "üì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ PDF...";

        const client = new NCALayerClient();
        await client.connect();

        const res = await fetch(`/pdf/prepare/${id}`);
        const { base64, filename } = await res.json();

        output.textContent = "‚úçÔ∏è –ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ...";
        let cms;
        try {
            cms = await client.createCAdESFromBase64(
                NCALayerClient.basicsStorageAll,
                base64,
                "SIGNATURE",
                true
            );
        } catch (err) {
            output.textContent = "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∏: " + err.message;
            return;
        }

        output.textContent = "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...";
        const formData = new FormData();
        formData.append("cms", cms);
        formData.append("id", id);

        const response = await fetch(`{{ route('pdf.sign') }}`, {
            method: "POST",
            body: formData
        });

        if (!response.ok) {
            output.textContent = "‚ùå –°–µ—Ä–≤–µ—Ä–Ω–∞—è –æ—à–∏–±–∫–∞: " + await response.text();
            return;
        }

        const blob = await response.blob();
        const url = URL.createObjectURL(blob);
        const a = document.createElement("a");
        a.href = url;
        a.download = "–ü–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π_–∞–∫—Ç.pdf";
        a.click();

        output.textContent = "‚úÖ –ü–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω!";
    }
</script>
</body>
</html>
